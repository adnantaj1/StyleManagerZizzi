@page "/styles"
@using StyleManagerUIZizzi.Models
@inject StyleManagerUIZizzi.Services.StyleService StyleService

<h3>Create New Style</h3>

<EditForm Model="@newStyle" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Style Number</label>
        <InputText class="form-control" @bind-Value="newStyle.StyleNumber" />
    </div>

    <div class="mb-3">
        <label>Select Color</label>
        <InputSelect class="form-control" @bind-Value="newStyle.ColorId">
            @if (newStyle.ColorId == 0)
            {
                <option disabled selected value="0">-- Select Color --</option>
            }
            @foreach (var color in colors)
            {
                <option value="@color.Id">@color.ColorName </option>
            }
        </InputSelect>
    </div>

    <div class="mb-3">
        <label>Select Size</label>
        <InputSelect class="form-control" @bind-Value="newStyle.SizeId">
            @if (newStyle.SizeId == 0)
            {
                <option disabled selected value="0">-- Select Size --</option>
            }
            @foreach (var size in sizes)
            {
                <option value="@size.Id">@size.SizeName </option>
            }
        </InputSelect>
    </div>

    <button class="btn btn-success">Create Style</button>
 
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">@errorMessage</div>
    }

    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success mt-3">@successMessage</div>
    }
</EditForm>
@code {
    private CreateStyleDto newStyle = new();
    private List<ColorDto> colors = new();
    private List<SizeDto> sizes = new();
    private string? successMessage;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        colors = await StyleService.GetColors();
        sizes = await StyleService.GetSizes();
    }

    private async Task HandleSubmit()
    {
        successMessage = null;
        errorMessage = null;

        try
        {
            var response = await StyleService.CreateStyle(newStyle);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "🎉 Style created successfully!";
                newStyle = new(); // Reset form
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.Conflict)
            {
                errorMessage = "This style with the same color and size already exists.";
            }
            else
            {
                errorMessage = "Something went wrong while creating the style.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Unexpected error: {ex.Message}";
        }
    }
}

